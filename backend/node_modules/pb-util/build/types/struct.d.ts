import { JsonValue, Value } from './value';
/**
 * Matches a JSON object.
 */
export declare type JsonObject = {
    [key: string]: JsonValue;
};
/**
 * @typedef {Object} Struct
 * @property {Object.<string, Value>} fields The struct fields.
 */
export interface Struct {
    fields?: {
        [key: string]: Value;
    };
}
/**
 * Used to encode/decode {@link Struct} objects.
 */
export declare const struct: {
    /**
     * Encodes a JSON object into a protobuf {@link Struct}.
     *
     * @param {Object.<string, *>} value the JSON object.
     * @returns {Struct}
     */
    encode(json: JsonObject): Struct;
    /**
     * Decodes a protobuf {@link Struct} into a JSON object.
     *
     * @param {Struct} struct the protobuf struct.
     * @returns {Object.<string, *>}
     */
    decode({ fields }: Struct): JsonObject;
};
